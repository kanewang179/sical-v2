# Go严格类型检查配置
run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - .git
  skip-files:
    - ".*\.pb\.go$"
    - ".*_test\.go$"

linters-settings:
  govet:
    check-shadowing: true
    enable-all: true
  
  staticcheck:
    go: "1.21"
    checks: ["all"]
  
  gosec:
    severity: "low"
    confidence: "low"
    excludes:
      - G104 # 审计错误未检查
  
  gocyclo:
    min-complexity: 10
  
  dupl:
    threshold: 100
  
  goconst:
    min-len: 3
    min-occurrences: 3
  
  misspell:
    locale: US
  
  lll:
    line-length: 120
  
  goimports:
    local-prefixes: sical-go-backend
  
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  
  funlen:
    lines: 60
    statements: 40
  
  gocognit:
    min-complexity: 20
  
  nestif:
    min-complexity: 4
  
  prealloc:
    simple: true
    range-loops: true
    for-loops: false
  
  nolintlint:
    allow-leading-space: true
    allow-unused: false
    require-explanation: false
    require-specific: false
  
  revive:
    min-confidence: 0
    rules:
      - name: atomic
      - name: line-length-limit
        arguments: [120]
      - name: argument-limit
        arguments: [8]
      - name: cyclomatic
        arguments: [10]
      - name: max-public-structs
        arguments: [3]
      - name: file-header
      - name: empty-block
      - name: superfluous-else
      - name: confusing-naming
      - name: get-return
      - name: modifies-parameter
      - name: confusing-results
      - name: deep-exit
      - name: unused-parameter
      - name: unreachable-code
      - name: flag-parameter
      - name: unnecessary-stmt
      - name: struct-tag
      - name: modifies-value-receiver
      - name: constant-logical-expr
      - name: bool-literal-in-expr
      - name: redefines-builtin-id
      - name: imports-blacklist
      - name: range-val-in-closure
      - name: range-val-address
      - name: waitgroup-by-value
      - name: atomic
      - name: empty-lines
      - name: call-to-gc
      - name: duplicated-imports
      - name: import-shadowing
      - name: bare-return
      - name: unused-receiver
      - name: unhandled-error
        arguments:
          - "fmt.Printf"
          - "fmt.Print"
          - "fmt.Println"
      - name: cognitive-complexity
        arguments: [15]
      - name: string-of-int
      - name: string-format
      - name: early-return
      - name: unconditional-recursion
      - name: identical-branches
      - name: defer
        arguments:
          - ["call-chain", "loop"]
      - name: unexported-naming
      - name: errorf
      - name: error-return
      - name: error-strings
      - name: receiver-naming
      - name: increment-decrement
      - name: var-naming
      - name: package-comments
      - name: range
      - name: indent-error-flow
      - name: add-constant
        arguments:
          - maxLitCount: "3"
            allowStrs: '""'
            allowInts: "0,1,2"
            allowFloats: "0.0,0.,1.0,1.,2.0,2."

linters:
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    - revive
    - prealloc
    - predeclared
    - nolintlint
    - nestif
    - gocognit
    - godot
    - godox
    - goerr113
    - gofumpt
    - goheader
    - gomodguard
    - gomoddirectives
    - goprintffuncname
    - importas
    - makezero
    - nlreturn
    - nilerr
    - nilnil
    - nosprintfhostport
    - promlinter
    - sqlclosecheck
    - tenv
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - wastedassign
    - wrapcheck

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - funlen
        - gocyclo
        - errcheck
        - dupl
        - gosec
    - path: cmd/
      linters:
        - gochecknoinits
    - linters:
        - lll
      source: "^//go:generate "
  
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop
    # gosec: Too many false-positives on 'unsafe' usage
    - (G103|G104|G204|G301|G302|G304|G401|G501|G502)
    # gosec: These only make sense when scoped to a specific domain like authentication
    - (G101|G102|G110|G201|G202|G203|G601)
  
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true