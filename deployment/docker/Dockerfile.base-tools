# 基础工具镜像 - 包含常用的Kubernetes工具
# 用于减少重复下载，提高构建效率
FROM alpine:latest

# 配置Alpine国内镜像源
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

# 安装基础工具
RUN apk add --no-cache \
    curl \
    wget \
    bash \
    git \
    jq \
    yq \
    unzip \
    tar \
    gzip \
    python3 \
    && rm -rf /var/cache/apk/*

# 定义镜像源变量（从 mirrors.json 读取）
# 从mirrors.json读取镜像源配置
COPY deployment/mirrors.json /tmp/mirrors.json
COPY deployment/docker/read-mirrors.sh /tmp/read-mirrors.sh
# 复制本地kubectl文件
COPY deployment/docker/kubectl /tmp/kubectl
RUN chmod +x /tmp/read-mirrors.sh && \
    . /tmp/read-mirrors.sh && \
    env | grep -E '^(NPM_REGISTRY|GOPROXY_URL|DOCKER_MIRRORS|DOCKER_HUB_PROXY|UBUNTU_MIRROR|DEBIAN_MIRROR|DEBIAN_SECURITY_MIRROR|ALPINE_MIRROR|PYPI_INDEX|GITHUB_PROXY|JENKINS_UPDATE_CENTER|HELM_REPOSITORY|KUBERNETES_OSS_REPO|HELM_REPO|KUBECTL_DOWNLOAD_URL|KUBECTL_MIRROR_URL|KUSTOMIZE_DOWNLOAD_URL|KIND_BINARY_DOWNLOAD_URL|DOCKER_COMPOSE_DOWNLOAD_URL|DOCKER_CE_MIRROR|NODEJS_MIRROR)=' > /tmp/mirrors.env

# 安装 kubectl (使用本地文件)
RUN echo "Installing tools for linux/amd64 architecture" && \
    echo "使用本地 kubectl 文件..." && \
    cp /tmp/kubectl /usr/local/bin/kubectl && \
    chmod +x /usr/local/bin/kubectl

# 安装 Helm
RUN echo "下载 helm..." && \
    curl -fsSL "https://get.helm.sh/helm-v3.17.4-linux-amd64.tar.gz" | tar -xz && \
    mv linux-amd64/helm /usr/local/bin/helm && \
    rm -rf linux-amd64

# 安装 kustomize
RUN echo "下载 kustomize..." && \
    curl -fsSL "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.2.1/kustomize_v5.2.1_linux_amd64.tar.gz" | tar -xz && \
    mv kustomize /usr/local/bin/

# 安装 kind
RUN echo "下载 kind..." && \
    curl -Lo ./kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.20.0/kind-linux-amd64" && \
    chmod +x ./kind && \
    mv ./kind /usr/local/bin/kind

# 安装 docker-compose
RUN echo "下载 docker-compose..." && \
    curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-linux-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose

# 验证工具安装
RUN kubectl version --client && \
    helm version && \
    kustomize version && \
    kind version

# 设置工作目录
WORKDIR /workspace

# 默认命令
CMD ["/bin/bash"]